#!/bin/sh

mod="Super"
alt="Mod1"
ctrl="Control"
meh="$alt+$ctrl+Shift"

mainOutput="DP-3"
sideOutput="HDMI-A-1"

terminal="alacritty"

defMasterRatio="0.7"

autostart="true"
if [ ! -z "$1" ]; then
  autostart="false"
fi

# Start a layout manager
kile &

toTag() {
  s=$(($1 - 1))
  echo $((1 << $s))
}

config() {
  riverctl focus-follows-cursor disabled
  riverctl set-cursor-warp on-output-change
  
  riverctl keyboard-layout "us"
  riverctl border-color-focused 0xbd93f9 
  riverctl border-color-unfocused 0x44475aaa
  
  riverctl border-width 3

  riverctl default-attach-mode bottom
  riverctl default-layout kile

  # It might fail depending on if kile is fully started or not...
  riverctl send-layout-cmd kile "default-padding 12"
  riverctl send-layout-cmd kile "main-ratio $defMasterRatio"
}

rules() {
  for f in my_pulsemixer my_joshuto my_notes galculator swappy floating_terminal blueman-manager
  do
    riverctl rule-add -app-id $f float
  done
  
  riverctl rule-add -app-id StarUML tags `toTag 4`
  riverctl rule-add -app-id Brave-browser tags `toTag 3`
  riverctl rule-add -app-id librewolf tags `toTag 1`
  riverctl rule-add -app-id thunderbird tags `toTag 10`
  riverctl rule-add -app-id Code tags `toTag 5`

  riverctl rule-add -app-id '*' ssd
}


bindings() {
  # Sounds
  riverctl map normal None XF86AudioMute spawn "pactl set-sink-mute @DEFAULT_SINK@ toggle"
  riverctl map normal None XF86AudioRaiseVolume spawn "pactl set-sink-volume @DEFAULT_SINK@ +5%"
  riverctl map normal None XF86AudioLowerVolume spawn "pactl set-sink-volume @DEFAULT_SINK@ -5%"

  # Windows
  riverctl map normal $mod A toggle-float
  riverctl map normal $mod F toggle-fullscreen
  riverctl map normal $mod K focus-view previous
  riverctl map normal $mod J focus-view next
  riverctl map normal $mod W zoom

  # Layout
  riverctl map normal $mod H focus-output left
  riverctl map normal $mod L focus-output right
  riverctl map normal $alt H spawn "riverctl send-to-output -current-tags left; riverctl focus-output left"
  riverctl map normal $alt L spawn "riverctl send-to-output -current-tags right; riverctl focus-output right"
  riverctl map normal $mod+Shift H send-layout-cmd kile "main-ratio 0.5"
  riverctl map normal $mod+Shift L send-layout-cmd kile "main-ratio $defMasterRatio"

  # System
  riverctl map normal $mod Q close
  riverctl map normal $mod+Shift A spawn "swaylock -f -i $mainOutput:~/.config/wallpapers/w2.jpg -i $sideOutput:~/.config/wallpapers/w1.jpg"
  riverctl map normal $mod E spawn "system-information"

  # Mouse 
  riverctl map-pointer normal $mod BTN_LEFT move-view
  riverctl map-pointer normal $mod BTN_RIGHT resize-view

  # Keyboard
  riverctl map normal $mod slash spawn "wtype é"
  riverctl map normal $mod+Shift slash spawn "wtype É"
  riverctl map normal $mod backslash spawn "wtype à"
  riverctl map normal $mod+Shift backslash spawn "wtype À"
  riverctl map normal $mod apostrophe spawn "wtype è"
  riverctl map normal $mod+Shift apostrophe spawn "wtype È"
  riverctl map normal $mod I spawn "wtype ç"
  riverctl map normal $mod+Shift I spawn "wtype Ç"
  
  ## Launch apps
  riverctl map normal $mod R spawn "bemenu-run -p 'Run:' --hf '#bd93f9'"
  riverctl map normal $mod G spawn "be-shortcuts"
  riverctl map normal $mod Return spawn $terminal
  riverctl map normal $mod R spawn "bemenu-run -p 'Run:' --hf '#bd93f9'"
  riverctl map normal None Print spawn 'grim -g "$(slurp)" - | swappy -f -'
  
  # Position
  riverctl map normal $mod T spawn "riverctl send-layout-cmd kile 'layout tab'"

  riverctl declare-mode position
  riverctl map position None H spawn "`exit_mode` riverctl send-layout-cmd kile 'layout left'"
  riverctl map position None L spawn "`exit_mode` riverctl send-layout-cmd kile 'layout right'"
  riverctl map position None K spawn "`exit_mode` riverctl send-layout-cmd kile 'layout top'"
  riverctl map position None J spawn "`exit_mode` riverctl send-layout-cmd kile 'layout bottom'"
  riverctl map position None Escape enter-mode normal
  riverctl map normal $mod D enter-mode position

  # Quick 
  riverctl declare-mode quick
  riverctl map quick None Return spawn "`exit_mode` $terminal --class floating_terminal"
  riverctl map quick None A spawn "`exit_mode` $terminal --class my_pulsemixer -e pulsemixer"
  riverctl map quick None Escape enter-mode normal

  # Delayed screenshot
  delayed_screenshot=`exit_mode`'selection="$(slurp)"; sleep 2; grim -g "$selection" - | swappy -f -'
  riverctl map quick None Print spawn "$delayed_screenshot"
  riverctl map normal $mod S enter-mode quick

  # ScratchPad
  scratch_tag=`toTag 20`
  riverctl map normal $mod P toggle-focused-tags $scratch_tag
  riverctl map normal $mod O set-view-tags $scratch_tag
}

exit_mode() {
  echo "riverctl enter-mode normal;"
}

workspace() {
  bind="$1"
  tag="$2"
  if [ -z "$tag" ]; then
    tag=$bind
  fi
  tag=`toTag $tag`
  
  riverctl map normal $mod $bind set-focused-tags $tag
  riverctl map normal $mod+Shift $bind set-view-tags $tag

  riverctl map normal $ctrl $bind toggle-focused-tags $tag
  riverctl map normal $mod+$ctrl $bind toggle-view-tags $tag
}

bindings
rules

for w in "1" "2" "3" "4" "5" "grave 10"
do
  workspace $w
done

config

if [ "$autostart" = "true" ]; then
  riverctl spawn "runsvdir ~/.services/"
  riverctl spawn "corectrl"
  
  riverctl spawn "dbus-update-activation-environment DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river"
  riverctl spawn "wlr-randr --output '$mainOutput' --preferred --pos 1080,780"
  riverctl spawn "wlr-randr --output '$sideOutput' --preferred --pos 0,0 --transform 90"
fi

